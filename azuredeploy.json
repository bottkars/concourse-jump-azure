{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "ubuntu",
            "minLength": 5,
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "sshKeyData": {
            "minLength": 20,
            "type": "string",
            "metadata": {
                "description": "ssh Public Key to log on to the jumpbox"
            }
        },
        "envShortName": {
            "type": "string",
            "minLength": 3,
            "metadata": {
                "description": "will be prefix for CONCOURSE opsman and director storage accounts"
            }
        },
        "keyVaultName": {
            "type": "string",
            "minLength": 3,
            "metadata": {
                "description": "Name of Azure Vault for Secrets"
            }
        },
        "keyVaultRG": {
            "type": "string",
            "minLength": 3,
            "metadata": {
                "description": "Name of Resource Group hosting Azure KeyVault for Secrets within Tenant"
            }
        },
        "CONCOURSEDomainName": {
            "type": "string",
            "minLength": 7,
            "metadata": {
                "description": "DNS domain (domain-suffix) for CONCOURSE ( where subdomain will be created in)"
            }
        },
        "CONCOURSESubdomainName": {
            "type": "string",
            "minLength": 3,
            "metadata": {
                "description": "subdomain (domain-prefix) for CONCOURSE"
            }
        },
        "JumphostDNSLabelPrefix": {
            "minLength": 3,
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Jumphost."
            }
        },
        "envName": {
            "type": "string",
            "minLength": 3,
            "defaultValue": "CONCOURSE",
            "metadata": {
                "description": "environment name for azure resource group and resources"
            }
        },
        "opsmanImage": {
            "type": "string",
            "minLength": 3,
            "allowedValues": [
                "2.4-build.145",
                "2.5.2-build.172"
            ],
            "defaultValue": "2.5.2-build.172",
            "metadata": {
                "description": "Image Name of Operation Manager Image, currently only 2.4.2 and 2.4.3"
            }
        },
        "net16bitmask": {
            "type": "string",
            "minLength": 3,
            "defaultValue": "10.12",
            "metadata": {
                "description": "first 16 bit of ip range in format xxx.xxx"
            }
        },
        "opsmanUsername": {
            "type": "string",
            "minLength": 5,
            "defaultValue": "opsman",
            "metadata": {
                "description": "user for Opsman"
            }
        },
        "CONCOURSEAutopilot": {
            "type": "string",
            "defaultValue": "TRUE",
            "allowedValues": [
                "FALSE",
                "TRUE"
            ],
            "metadata": {
                "description": "autodeploy CONCOURSE"
            }
        },
        "useSelfCerts": {
            "type": "string",
            "defaultValue": "TRUE",
            "allowedValues": [
                "FALSE",
                "TRUE"
            ],
            "metadata": {
                "description": "for testing, use self signed certs, otherwise LetÂ´s Encrypt"
            }
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "18.04-LTS",
            "allowedValues": [
                "18.04-LTS",
                "16.04.5-LTS"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "allowedValues": [
                "Standard_F2s_v2",
                "Standard_DS2_v2",
                "Standard_D2s_v3"
            ],
            "metadata": {
                "description": "VM Size for Jumphost"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "opsmanImageRegion": {
            "type": "string",
            "defaultValue": "westeurope",
            "allowedValues": [
                "eastus",
                "westus",
                "westeurope",
                "southeastasia"
            ],
            "metadata": {
                "description": "Location for OPSMAN  Download resources."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/bottkars/concourse-jump-azure/master",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            }
        }
    },
    "variables": {
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "DiagnosticsStorageAccountName": "[concat(uniquestring(resourceGroup().id), 'salinuxvm')]",
        "DiagnosticsStorageAccountType": "Standard_LRS",
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "nicName": "myVMNic",
        "addressPrefix": "10.12.0.0/16",
        "subnetName": "Subnet1",
        "subnetPrefix": "10.12.0.0/24",
        "publicIPAddressName": "myPublicIP",
        "publicIPAddressType": "Dynamic",
        "vmName": "concoursejumphost",
        "virtualNetworkName": "jumpVNET",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
        "baseUri": "[parameters('_artifactsLocation')]",
        "filesToDownload": [
            "[concat(variables('baseUri'),  '/scripts/om_init.sh')]",
            "[concat(variables('baseUri'),  '/scripts/stemcell_loader.sh')]",
            "[concat(variables('baseUri'),  '/scripts/deploy_base.sh')]",
            "[concat(variables('baseUri'),  '/scripts/control_assets.sh')]",
            "[concat(variables('baseUri'),  '/scripts/create_self_certs.sh')]",
            "[concat(variables('baseUri'),  '/scripts/create_certs.sh')]",
            "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/shared_scripts/ubuntu/vm-disk-utils-0.1.sh"
        ]
    },
    "resources": [
        {
            "apiVersion": "2017-05-10",
            "name": "nestedTemplate",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('keyVaultRG')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults/accessPolicies",
                            "name": "[concat(parameters('keyVaultName'), '/add')]",
                            "apiVersion": "2018-02-14",
                            "location": "[parameters('location')]",
                            "properties": {
                                "accessPolicies": [
                                    {
                                        "tenantId": "[subscription().tenantId]",
                                        "objectId": "[reference(concat(resourceId('Microsoft.Compute/virtualMachines', variables('vmName')), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').principalId]",
                                        "permissions": {
                                            "secrets": [
                                                "get",
                                                "list"
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('DiagnosticsStorageAccountName')]",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('DiagnosticsStorageAccountType')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('JumphostDNSLabelPrefix')]"
                }
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('vmName')]",
            "apiVersion": "2018-04-01",
            "type": "Microsoft.Compute/virtualMachines",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('DiagnosticsStorageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "tags": {
                "Application": "CONCOURSE Jumphost",
                "AutoDeployed RG": "[parameters('envName')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[reference('Microsoft.Resources/deployments/generate-customdata', '2015-01-01').outputs.customData.value]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[variables('sshKeyPath')]",
                                    "keyData": "[parameters('sshKeyData')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1200,
                            "lun": 0,
                            "createOption": "Empty",
                            "caching": "ReadWrite",
                            "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('DiagnosticsStorageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
                    }
                }
            }
        },
        {
            "name": "generate-customdata",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUri'), '/generate-customdata.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "customData": {
                        "value": {
                            "ADMIN_USERNAME": "[parameters('adminUsername')]",
                            "AZURE_VAULT": "[parameters('keyVaultName')]",
                            "ENV_NAME": "[parameters('envName')]",
                            "ENV_SHORT_NAME": "[parameters('envShortName')]",
                            "OPS_MANAGER_IMAGE_URI": "[concat('https://opsmanager',parameters('opsmanImageregion'),'.blob.core.windows.net/images/ops-manager-',parameters('opsmanImage'),'.vhd')]",
                            "CONCOURSE_DOMAIN_NAME": "[parameters('CONCOURSEDomainName')]",
                            "CONCOURSE_SUBDOMAIN_NAME": "[parameters('CONCOURSESubdomainName')]",
                            "SSH_PUBLIC_KEY": "[parameters('sshkeyData')]",
                            "OPSMAN_USERNAME": "[parameters('opsmanUsername')]",
                            "NET_16_BIT_MASK": "[parameters('net16bitmask')]",
                            "CONCOURSE_AUTOPILOT": "[parameters('CONCOURSEAutopilot')]",
                            "USE_SELF_CERTS": "[parameters('useSelfCerts')]",
                            "JUMP_VNET": "[variables('virtualNetworkName')]"
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),'/initvm')]",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": "[variables('filesToDownload')]",
                    "timestamp": 2
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('bash -l -c \"./deploy_base.sh 2>&1 | tee /home/', parameters('adminUsername'), '/install.log\"')]"
                }
            }
        }
    ],
    "outputs": {
        "hostname": {
            "type": "string",
            "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
        },
        "sshCommand": {
            "type": "string",
            "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
        }
    }
}